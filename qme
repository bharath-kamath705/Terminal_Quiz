#!/bin/bash

#set directory for qme program and files
QME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# set default deck
DECK="deck_bash_scripting"

chk_int(){

	# fails if input is empty or not a positive integer
	local CHK_VAR="${*}"
	
	# shuf -i expects an integer 
	shuf -i 1-${CHK_VAR} >/dev/null 2>/dev/null
	
	if [[ ${?} -ne 0 ]]
	then 
		echo "Input not an integer." >&2
		exit 1
	fi
}

chk_str(){
	# fails if input is empty
	local CHK_VAR="${*}"
	local FLAG=0
	
	FLAG=$(echo ${CHK_VAR} | wc -w)
	
	if [[ ${FLAG} -eq 0 ]]
	then 
		echo "Invalid input." >&2
		exit 1
	fi
}

# record the question number of most recent random question seen
if [[ -f ${QME}/${DECK}/most_recent.log ]]
	then
		MOST_REC=$(cat ${QME}/${DECK}/most_recent.log | cut --fields 1 | cut -c 1-4 --complement)
	else
		MOST_REC="f" # assigned letter so an integer check fails"
fi

if [[ ${#} -eq 0 ]]
then
	#show random question     	
	#----------------------------------------
	cat ${QME}/${DECK}/qme_questions.txt | shuf | head -n 1 |tee ${QME}/${DECK}/most_recent.log
		
	#logs to keep track of number of random questions shown
	date >> ${QME}/${DECK}/qme_session.log  # erased every session
	date >> ${QME}/${DECK}/qme_alltime.log
	exit 0
fi

case "$1" in

	-c)
	#number of random questions seen this session
	#----------------------------------------
	cat ${QME}/${DECK}/qme_session.log | wc -l
	;;

	-t)
	#number of random questions in total
	#----------------------------------------
	cat ${QME}/${DECK}/qme_alltime.log | wc -l
	;;	

	-q|--question)
	#Show Nth question  
	#----------------------------------------
	if [[ ${#} -eq 1 ]]
	then
		chk_int ${MOST_REC} # fail if most recent question does not exist
		sed "${MOST_REC}q;d" ${QME}/${DECK}/qme_questions.txt
	else
		chk_int $2 # check for valid argument
		sed "$2q;d" ${QME}/${DECK}/qme_questions.txt
	fi
	;;

	-a|--answer)
	#Show Nth answer  
	#----------------------------------------
	if [[ ${#} -eq 1 ]]
	then
		chk_int ${MOST_REC} # fail if most recent question does not exist
		sed "${MOST_REC}q;d" ${QME}/${DECK}/qme_answers.txt
	else
		chk_int $2 # check for valid argument
		sed "$2q;d" ${QME}/${DECK}/qme_answers.txt
	fi
	;;

	-e)
	#Edit Nth question  
	#----------------------------------------
	
	read -p "Enter question number you want to edit: " Q_NUM
	
	# check for invalid input
	chk_int ${Q_NUM}
	
	echo -e "\nCurrent Entry:"
	sed "${Q_NUM}q;d" ${QME}/${DECK}/qme_questions.txt
	
	echo
	read -p "Enter the new question: " QUESTION
	
	# check for wrong input
	chk_str ${QUESTION}
	
	cat ${QME}/${DECK}/qme_questions.txt | cut --fields 2 | sed "${Q_NUM} c${QUESTION}"| cat -n >${QME}/${DECK}/qtmp.txt
	rm ${QME}/${DECK}/qme_questions.txt
	mv ${QME}/${DECK}/qtmp.txt ${QME}/${DECK}/qme_questions.txt

	echo -e "\nNew Entry:"
	sed "${Q_NUM}q;d" ${QME}/${DECK}/qme_questions.txt	
	;;

	-f)
	#Edit Nth answer  
	#----------------------------------------
	read -p "Enter answer number you want to edit: " ANS_NUM
	
	# check for invalid input
	chk_int ${ANS_NUM}
	
	echo -e "\nCurrent Entry:"
	sed "${ANS_NUM}q;d" ${QME}/${DECK}/qme_answers.txt
	
	echo
	read -p "Enter the new answer: " ANS
	
	# check for wrong input
	chk_str ${ANS}
	
	# replace answer on file 
	cat ${QME}/${DECK}/qme_answers.txt | cut --fields 2 | sed "$ANS_NUM c$ANS"| cat -n >${QME}/${DECK}/atmp.txt
	rm ${QME}/${DECK}/qme_answers.txt
	mv ${QME}/${DECK}/atmp.txt ${QME}/${DECK}/qme_answers.txt	
	
	echo -e "\nNew Entry:"
	sed "${ANS_NUM}q;d" ${QME}/${DECK}/qme_answers.txt
	;;

	--add)
	#add question and answer to the database  
	#----------------------------------------
	read -p "Enter the new question: " NEW_QUES
	
	# check for wrong input
	chk_str ${NEW_QUES}
	
	read -p "Enter the new answer: " NEW_ANS
	
	# check for wrong input
	chk_str ${NEW_ANS}
	
	echo ${NEW_QUES} | cat -n >>${QME}/${DECK}/qme_questions.txt
	echo ${NEW_ANS} | cat -n >>${QME}/${DECK}/qme_answers.txt
	cut ${QME}/${DECK}/qme_questions.txt --fields 2 | cat -n > ${QME}/${DECK}/qme_questions_tmp.txt
	cut ${QME}/${DECK}/qme_answers.txt --fields 2 | cat -n > ${QME}/${DECK}/qme_answers_tmp.txt
	rm ${QME}/${DECK}/qme_answers.txt ${QME}/${DECK}/qme_questions.txt
	mv ${QME}/${DECK}/qme_answers_tmp.txt ${QME}/${DECK}/qme_answers.txt
	mv ${QME}/${DECK}/qme_questions_tmp.txt ${QME}/${DECK}/qme_questions.txt
	echo "Done."
	;;

	--remove)
	#remove Nth question and answer
	#----------------------------------------
	# check for wrong input
	chk_int $2
	
	# check if input is less than number of questions/answers
	#total number of question in the question bank
	NUM_LINES="$(cat ${QME}/${DECK}/qme_questions.txt | wc -l)"
	if [[ ${2} -gt ${NUM_LINES} ]]
	then
		echo "Invalid input. Enter a number less than or equal to ${NUM_LINES}" >&2
		exit 1
	fi
	
	let top=$2-1
	let bot=$NUM_LINES-$2	
	
	#remove question and write to qtmp.txt
	head ${QME}/${DECK}/qme_questions.txt -n $top >${QME}/${DECK}/qtmp.txt
	tail ${QME}/${DECK}/qme_questions.txt -n $bot >>${QME}/${DECK}/qtmp.txt

	#remove answer and write to atmp.txt
	head ${QME}/${DECK}/qme_answers.txt -n $top >${QME}/${DECK}/atmp.txt
	tail ${QME}/${DECK}/qme_answers.txt -n $bot >>${QME}/${DECK}/atmp.txt

	#re-number lines and remove qtmp.txt and atmp.txt
	cut ${QME}/${DECK}/qtmp.txt --fields 2 | cat -n | tee ${QME}/${DECK}/qme_questions.txt >/dev/null
	cut ${QME}/${DECK}/atmp.txt --fields 2 | cat -n | tee ${QME}/${DECK}/qme_answers.txt >/dev/null	
	rm ${QME}/${DECK}/qtmp.txt ${QME}/${DECK}/atmp.txt	
	echo "Removed."
	;;

	--clear-log)
	#reset the all time log
	#----------------------------------------
	rm ${QME}/${DECK}/qme_alltime.log
	;;

	--reset)
	#reset questions and answers to default
	#----------------------------------------
	cp ${QME}/${DECK}/qme_questions_default.txt ${QME}/${DECK}/qme_questions.txt
	cp ${QME}/${DECK}/qme_answers_default.txt ${QME}/${DECK}/qme_answers.txt
	;;	 


	*)
	echo "Invalid Option" >&2
	exit 1

esac

